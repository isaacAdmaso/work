ConcurrentHashMap.c: In function ‘HashMap_Insert’:
ConcurrentHashMap.c:172:11: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
  mutexPtr = &(_map->m_myMutexPool[mutexIdx].m_lock);
           ^
ConcurrentHashMap.c:177:24: warning: passing argument 1 of ‘Bucket_Insert’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
  error = Bucket_Insert(_key,_value,_map->m_items[idx],_map->m_keysEqualFunc);
                        ^~~~
In file included from ConcurrentHashMap.c:5:0:
bucket.h:48:12: note: expected ‘void *’ but argument is of type ‘const void *’
 Map_Result Bucket_Insert(void* _key ,void* _value ,Bucket_t*  _bucket ,EqualityFunction1 _keysEqualFunc);
            ^~~~~~~~~~~~~
ConcurrentHashMap.c:177:29: warning: passing argument 2 of ‘Bucket_Insert’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
  error = Bucket_Insert(_key,_value,_map->m_items[idx],_map->m_keysEqualFunc);
                             ^~~~~~
In file included from ConcurrentHashMap.c:5:0:
bucket.h:48:12: note: expected ‘void *’ but argument is of type ‘const void *’
 Map_Result Bucket_Insert(void* _key ,void* _value ,Bucket_t*  _bucket ,EqualityFunction1 _keysEqualFunc);
            ^~~~~~~~~~~~~
ConcurrentHashMap.c: In function ‘HashMap_Remove’:
ConcurrentHashMap.c:217:11: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
  mutexPtr = &(_map->m_myMutexPool[mutexIdx].m_lock);
           ^
ConcurrentHashMap.c: In function ‘HashMap_Rehash’:
ConcurrentHashMap.c:278:10: warning: implicit declaration of function ‘ReHashLoop’ [-Wimplicit-function-declaration]
  error = ReHashLoop(_map,oldHash,hashOldSize);
          ^~~~~~~~~~
ConcurrentHashMap.c: At top level:
ConcurrentHashMap.c:284:19: error: conflicting types for ‘ReHashLoop’
 static Map_Result ReHashLoop(HashMap *_map,Bucket_t** _oldHash,size_t _hashOldSize)
                   ^~~~~~~~~~
ConcurrentHashMap.c:278:10: note: previous implicit declaration of ‘ReHashLoop’ was here
  error = ReHashLoop(_map,oldHash,hashOldSize);
          ^~~~~~~~~~
ConcurrentHashMap.c: In function ‘ReHashLoop’:
ConcurrentHashMap.c:293:36: warning: passing argument 1 of ‘Bucket_Size’ from incompatible pointer type [-Wincompatible-pointer-types]
   if((_oldBucketSize = Bucket_Size(_oldHash + i)))
                                    ^~~~~~~~
In file included from ConcurrentHashMap.c:5:0:
bucket.h:66:8: note: expected ‘Bucket_t * {aka struct Bucket_t *}’ but argument is of type ‘Bucket_t ** {aka struct Bucket_t **}’
 size_t Bucket_Size(Bucket_t* _bucket);
        ^~~~~~~~~~~
ConcurrentHashMap.c:297:32: warning: passing argument 1 of ‘Bucket_Get_First_Key’ from incompatible pointer type [-Wincompatible-pointer-types]
     key = Bucket_Get_First_Key(_oldHash + i);
                                ^~~~~~~~
In file included from ConcurrentHashMap.c:5:0:
bucket.h:61:7: note: expected ‘Bucket_t * {aka struct Bucket_t *}’ but argument is of type ‘Bucket_t ** {aka struct Bucket_t **}’
 void* Bucket_Get_First_Key(Bucket_t* _bucket);
       ^~~~~~~~~~~~~~~~~~~~
In file included from ConcurrentHashMap.c:8:0:
ConcurrentHashMap.c:299:26: warning: passing argument 1 of ‘Bucket_Remove’ from incompatible pointer type [-Wincompatible-pointer-types]
     assert(Bucket_Remove(_oldHash + i,key,dataHolder) == MAP_SUCCESS) ;
                          ^
In file included from ConcurrentHashMap.c:5:0:
bucket.h:55:12: note: expected ‘Bucket_t * {aka struct Bucket_t *}’ but argument is of type ‘Bucket_t ** {aka struct Bucket_t **}’
 Map_Result Bucket_Remove(Bucket_t* _bucket, const void* _searchKey, void** _pValue);
            ^~~~~~~~~~~~~
In file included from ConcurrentHashMap.c:8:0:
ConcurrentHashMap.c:299:26: warning: passing argument 1 of ‘Bucket_Remove’ from incompatible pointer type [-Wincompatible-pointer-types]
     assert(Bucket_Remove(_oldHash + i,key,dataHolder) == MAP_SUCCESS) ;
                          ^
In file included from ConcurrentHashMap.c:5:0:
bucket.h:55:12: note: expected ‘Bucket_t * {aka struct Bucket_t *}’ but argument is of type ‘Bucket_t ** {aka struct Bucket_t **}’
 Map_Result Bucket_Remove(Bucket_t* _bucket, const void* _searchKey, void** _pValue);
            ^~~~~~~~~~~~~
ConcurrentHashMap.c:303:19: warning: passing argument 1 of ‘Bucket_Destroy’ from incompatible pointer type [-Wincompatible-pointer-types]
    Bucket_Destroy(_oldHash + i,NULL,NULL);
                   ^~~~~~~~
In file included from ConcurrentHashMap.c:5:0:
bucket.h:33:6: note: expected ‘Bucket_t * {aka struct Bucket_t *}’ but argument is of type ‘Bucket_t ** {aka struct Bucket_t **}’
 void Bucket_Destroy(Bucket_t* _bucket,ElementDestroy _keyDestroy,ElementDestroy _valDestroy);
      ^~~~~~~~~~~~~~
ConcurrentHashMap.c: In function ‘HashMap_Find’:
ConcurrentHashMap.c:340:26: warning: passing argument 1 of ‘HashMutexIdx’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
  mutexIdx = HashMutexIdx(_map,idx);
                          ^~~~
ConcurrentHashMap.c:41:15: note: expected ‘HashMap * {aka struct HashMap *}’ but argument is of type ‘const HashMap * {aka const struct HashMap *}’
 static size_t HashMutexIdx(HashMap* _map,size_t _idx);
               ^~~~~~~~~~~~
ConcurrentHashMap.c:341:11: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
  mutexPtr = &(_map->m_myMutexPool[mutexIdx].m_lock);
           ^
ConcurrentHashMap.c:344:16: warning: passing argument 1 of ‘HashIdx’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
  idx = HashIdx(_map,_key);
                ^~~~
ConcurrentHashMap.c:40:15: note: expected ‘HashMap * {aka struct HashMap *}’ but argument is of type ‘const HashMap * {aka const struct HashMap *}’
 static size_t HashIdx(HashMap* _map,const void* _key);
               ^~~~~~~
